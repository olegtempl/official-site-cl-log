{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/shared.js","../src/data/en/documentation/methods/methods.js","../src/data/en/documentation/methods/red.js","../src/data/en/documentation/methods/gre.js","../src/data/en/documentation/methods/yel.js","../src/data/en/documentation/methods/blu.js","../src/data/en/documentation/methods/mag.js","../src/data/en/documentation/methods/cya.js","../src/data/en/documentation/methods/whi.js","../src/data/en/documentation/methods/log.js","../src/data/ru/documentation/methods/methods.js","../src/data/ru/documentation/methods/red.js","../src/data/ru/documentation/methods/gre.js","../src/data/ru/documentation/methods/yel.js","../src/data/ru/documentation/methods/blu.js","../src/data/ru/documentation/methods/mag.js","../src/data/ru/documentation/methods/cya.js","../src/data/ru/documentation/methods/whi.js","../src/data/ru/documentation/methods/log.js","../src/data/by/documentation/methods/methods.js","../src/data/by/documentation/methods/red.js","../src/data/by/documentation/methods/gre.js","../src/data/by/documentation/methods/yel.js","../src/data/by/documentation/methods/blu.js","../src/data/by/documentation/methods/mag.js","../src/data/by/documentation/methods/cya.js","../src/data/by/documentation/methods/whi.js","../src/data/by/documentation/methods/log.js","../src/data/allData.js","../node_modules/node-cl-log/index.js","../src/components/documentation/checkboxes/Red.html","../src/components/documentation/checkboxes/Gre.html","../src/components/documentation/checkboxes/Yel.html","../src/components/documentation/checkboxes/Mag.html","../src/components/documentation/checkboxes/Cya.html","../src/components/documentation/checkboxes/Whi.html","../src/components/documentation/checkboxes/Log.html","../src/components/documentation/ButtonAllMethods.html","../src/components/documentation/PrintInfoForMethod.html","../src/components/documentation/Documentation.html","../node_modules/svelte/store.js","../src/main.js"],"sourcesContent":["function noop() {}\n\nfunction assign(tar, src) {\n\tfor (var k in src) tar[k] = src[k];\n\treturn tar;\n}\n\nfunction assignTrue(tar, src) {\n\tfor (var k in src) tar[k] = 1;\n\treturn tar;\n}\n\nfunction isPromise(value) {\n\treturn value && typeof value.then === 'function';\n}\n\nfunction callAfter(fn, i) {\n\tif (i === 0) fn();\n\treturn () => {\n\t\tif (!--i) fn();\n\t};\n}\n\nfunction addLoc(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nfunction exclude(src, prop) {\n\tconst tar = {};\n\tfor (const k in src) k === prop || (tar[k] = src[k]);\n\treturn tar;\n}\n\nfunction run(fn) {\n\tfn();\n}\n\nfunction append(target, node) {\n\ttarget.appendChild(node);\n}\n\nfunction insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor);\n}\n\nfunction detachNode(node) {\n\tnode.parentNode.removeChild(node);\n}\n\nfunction detachBetween(before, after) {\n\twhile (before.nextSibling && before.nextSibling !== after) {\n\t\tbefore.parentNode.removeChild(before.nextSibling);\n\t}\n}\n\nfunction detachBefore(after) {\n\twhile (after.previousSibling) {\n\t\tafter.parentNode.removeChild(after.previousSibling);\n\t}\n}\n\nfunction detachAfter(before) {\n\twhile (before.nextSibling) {\n\t\tbefore.parentNode.removeChild(before.nextSibling);\n\t}\n}\n\nfunction reinsertBetween(before, after, target) {\n\twhile (before.nextSibling && before.nextSibling !== after) {\n\t\ttarget.appendChild(before.parentNode.removeChild(before.nextSibling));\n\t}\n}\n\nfunction reinsertChildren(parent, target) {\n\twhile (parent.firstChild) target.appendChild(parent.firstChild);\n}\n\nfunction reinsertAfter(before, target) {\n\twhile (before.nextSibling) target.appendChild(before.nextSibling);\n}\n\nfunction reinsertBefore(after, target) {\n\tvar parent = after.parentNode;\n\twhile (parent.firstChild !== after) target.appendChild(parent.firstChild);\n}\n\nfunction destroyEach(iterations, detach) {\n\tfor (var i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detach);\n\t}\n}\n\nfunction createFragment() {\n\treturn document.createDocumentFragment();\n}\n\nfunction createElement(name) {\n\treturn document.createElement(name);\n}\n\nfunction createSvgElement(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\nfunction createText(data) {\n\treturn document.createTextNode(data);\n}\n\nfunction createComment() {\n\treturn document.createComment('');\n}\n\nfunction addListener(node, event, handler) {\n\tnode.addEventListener(event, handler, false);\n}\n\nfunction removeListener(node, event, handler) {\n\tnode.removeEventListener(event, handler, false);\n}\n\nfunction setAttribute(node, attribute, value) {\n\tnode.setAttribute(attribute, value);\n}\n\nfunction setAttributes(node, attributes) {\n\tfor (var key in attributes) {\n\t\tif (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key in node) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tif (attributes[key] === undefined) removeAttribute(node, key);\n\t\t\telse setAttribute(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\nfunction setCustomElementData(node, prop, value) {\n\tif (prop in node) {\n\t\tnode[prop] = value;\n\t} else if (value) {\n\t\tsetAttribute(node, prop, value);\n\t} else {\n\t\tremoveAttribute(node, prop);\n\t}\n}\n\nfunction removeAttribute(node, attribute) {\n\tnode.removeAttribute(attribute);\n}\n\nfunction setXlinkAttribute(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\nfunction getBindingGroupValue(group) {\n\tvar value = [];\n\tfor (var i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.push(group[i].__value);\n\t}\n\treturn value;\n}\n\nfunction toNumber(value) {\n\treturn value === '' ? undefined : +value;\n}\n\nfunction timeRangesToArray(ranges) {\n\tvar array = [];\n\tfor (var i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\nfunction children (element) {\n\treturn Array.from(element.childNodes);\n}\n\nfunction claimElement (nodes, name, attributes, svg) {\n\tfor (var i = 0; i < nodes.length; i += 1) {\n\t\tvar node = nodes[i];\n\t\tif (node.nodeName === name) {\n\t\t\tfor (var j = 0; j < node.attributes.length; j += 1) {\n\t\t\t\tvar attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) node.removeAttribute(attribute.name);\n\t\t\t}\n\t\t\treturn nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n\t\t}\n\t}\n\n\treturn svg ? createSvgElement(name) : createElement(name);\n}\n\nfunction claimText (nodes, data) {\n\tfor (var i = 0; i < nodes.length; i += 1) {\n\t\tvar node = nodes[i];\n\t\tif (node.nodeType === 3) {\n\t\t\tnode.data = data;\n\t\t\treturn nodes.splice(i, 1)[0];\n\t\t}\n\t}\n\n\treturn createText(data);\n}\n\nfunction setData(text, data) {\n\ttext.data = '' + data;\n}\n\nfunction setInputType(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {}\n}\n\nfunction setStyle(node, key, value) {\n\tnode.style.setProperty(key, value);\n}\n\nfunction selectOption(select, value) {\n\tfor (var i = 0; i < select.options.length; i += 1) {\n\t\tvar option = select.options[i];\n\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nfunction selectOptions(select, value) {\n\tfor (var i = 0; i < select.options.length; i += 1) {\n\t\tvar option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nfunction selectValue(select) {\n\tvar selectedOption = select.querySelector(':checked') || select.options[0];\n\treturn selectedOption && selectedOption.__value;\n}\n\nfunction selectMultipleValue(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), function(option) {\n\t\treturn option.__value;\n\t});\n}\n\nfunction addResizeListener(element, fn) {\n\tif (getComputedStyle(element).position === 'static') {\n\t\telement.style.position = 'relative';\n\t}\n\n\tconst object = document.createElement('object');\n\tobject.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n\tobject.type = 'text/html';\n\n\tlet win;\n\n\tobject.onload = () => {\n\t\twin = object.contentDocument.defaultView;\n\t\twin.addEventListener('resize', fn);\n\t};\n\n\tif (/Trident/.test(navigator.userAgent)) {\n\t\telement.appendChild(object);\n\t\tobject.data = 'about:blank';\n\t} else {\n\t\tobject.data = 'about:blank';\n\t\telement.appendChild(object);\n\t}\n\n\treturn {\n\t\tcancel: () => {\n\t\t\twin && win.removeEventListener && win.removeEventListener('resize', fn);\n\t\t\telement.removeChild(object);\n\t\t}\n\t};\n}\n\nfunction toggleClass(element, name, toggle) {\n\telement.classList.toggle(name, !!toggle);\n}\n\nfunction linear(t) {\n\treturn t;\n}\n\nfunction generateRule({ a, b, delta, duration }, ease, fn) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + delta * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\n\treturn keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n}\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\nfunction wrapTransition(component, node, fn, params, intro) {\n\tlet obj = fn.call(component, node, params);\n\tlet duration;\n\tlet ease;\n\tlet cssText;\n\n\tlet initialised = false;\n\n\treturn {\n\t\tt: intro ? 0 : 1,\n\t\trunning: false,\n\t\tprogram: null,\n\t\tpending: null,\n\n\t\trun(b, callback) {\n\t\t\tif (typeof obj === 'function') {\n\t\t\t\ttransitionManager.wait().then(() => {\n\t\t\t\t\tobj = obj();\n\t\t\t\t\tthis._run(b, callback);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis._run(b, callback);\n\t\t\t}\n\t\t},\n\n\t\t_run(b, callback) {\n\t\t\tduration = obj.duration || 300;\n\t\t\tease = obj.easing || linear;\n\n\t\t\tconst program = {\n\t\t\t\tstart: window.performance.now() + (obj.delay || 0),\n\t\t\t\tb,\n\t\t\t\tcallback: callback || noop\n\t\t\t};\n\n\t\t\tif (intro && !initialised) {\n\t\t\t\tif (obj.css && obj.delay) {\n\t\t\t\t\tcssText = node.style.cssText;\n\t\t\t\t\tnode.style.cssText += obj.css(0, 1);\n\t\t\t\t}\n\n\t\t\t\tif (obj.tick) obj.tick(0, 1);\n\t\t\t\tinitialised = true;\n\t\t\t}\n\n\t\t\tif (!b) {\n\t\t\t\tprogram.group = outros.current;\n\t\t\t\toutros.current.remaining += 1;\n\t\t\t}\n\n\t\t\tif (obj.delay) {\n\t\t\t\tthis.pending = program;\n\t\t\t} else {\n\t\t\t\tthis.start(program);\n\t\t\t}\n\n\t\t\tif (!this.running) {\n\t\t\t\tthis.running = true;\n\t\t\t\ttransitionManager.add(this);\n\t\t\t}\n\t\t},\n\n\t\tstart(program) {\n\t\t\tcomponent.fire(`${program.b ? 'intro' : 'outro'}.start`, { node });\n\n\t\t\tprogram.a = this.t;\n\t\t\tprogram.delta = program.b - program.a;\n\t\t\tprogram.duration = duration * Math.abs(program.b - program.a);\n\t\t\tprogram.end = program.start + program.duration;\n\n\t\t\tif (obj.css) {\n\t\t\t\tif (obj.delay) node.style.cssText = cssText;\n\n\t\t\t\tconst rule = generateRule(program, ease, obj.css);\n\t\t\t\ttransitionManager.addRule(rule, program.name = '__svelte_' + hash(rule));\n\n\t\t\t\tnode.style.animation = (node.style.animation || '')\n\t\t\t\t\t.split(', ')\n\t\t\t\t\t.filter(anim => anim && (program.delta < 0 || !/__svelte/.test(anim)))\n\t\t\t\t\t.concat(`${program.name} ${program.duration}ms linear 1 forwards`)\n\t\t\t\t\t.join(', ');\n\t\t\t}\n\n\t\t\tthis.program = program;\n\t\t\tthis.pending = null;\n\t\t},\n\n\t\tupdate(now) {\n\t\t\tconst program = this.program;\n\t\t\tif (!program) return;\n\n\t\t\tconst p = now - program.start;\n\t\t\tthis.t = program.a + program.delta * ease(p / program.duration);\n\t\t\tif (obj.tick) obj.tick(this.t, 1 - this.t);\n\t\t},\n\n\t\tdone() {\n\t\t\tconst program = this.program;\n\t\t\tthis.t = program.b;\n\n\t\t\tif (obj.tick) obj.tick(this.t, 1 - this.t);\n\n\t\t\tcomponent.fire(`${program.b ? 'intro' : 'outro'}.end`, { node });\n\n\t\t\tif (!program.b && !program.invalidated) {\n\t\t\t\tprogram.group.callbacks.push(() => {\n\t\t\t\t\tprogram.callback();\n\t\t\t\t\tif (obj.css) transitionManager.deleteRule(node, program.name);\n\t\t\t\t});\n\n\t\t\t\tif (--program.group.remaining === 0) {\n\t\t\t\t\tprogram.group.callbacks.forEach(run);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (obj.css) transitionManager.deleteRule(node, program.name);\n\t\t\t}\n\n\t\t\tthis.running = !!this.pending;\n\t\t},\n\n\t\tabort(reset) {\n\t\t\tif (this.program) {\n\t\t\t\tif (reset && obj.tick) obj.tick(1, 0);\n\t\t\t\tif (obj.css) transitionManager.deleteRule(node, this.program.name);\n\t\t\t\tthis.program = this.pending = null;\n\t\t\t\tthis.running = false;\n\t\t\t}\n\t\t},\n\n\t\tinvalidate() {\n\t\t\tif (this.program) {\n\t\t\t\tthis.program.invalidated = true;\n\t\t\t}\n\t\t}\n\t};\n}\n\nlet outros = {};\n\nfunction groupOutros() {\n\toutros.current = {\n\t\tremaining: 0,\n\t\tcallbacks: []\n\t};\n}\n\nvar transitionManager = {\n\trunning: false,\n\ttransitions: [],\n\tbound: null,\n\tstylesheet: null,\n\tactiveRules: {},\n\tpromise: null,\n\n\tadd(transition) {\n\t\tthis.transitions.push(transition);\n\n\t\tif (!this.running) {\n\t\t\tthis.running = true;\n\t\t\trequestAnimationFrame(this.bound || (this.bound = this.next.bind(this)));\n\t\t}\n\t},\n\n\taddRule(rule, name) {\n\t\tif (!this.stylesheet) {\n\t\t\tconst style = createElement('style');\n\t\t\tdocument.head.appendChild(style);\n\t\t\ttransitionManager.stylesheet = style.sheet;\n\t\t}\n\n\t\tif (!this.activeRules[name]) {\n\t\t\tthis.activeRules[name] = true;\n\t\t\tthis.stylesheet.insertRule(`@keyframes ${name} ${rule}`, this.stylesheet.cssRules.length);\n\t\t}\n\t},\n\n\tnext() {\n\t\tthis.running = false;\n\n\t\tconst now = window.performance.now();\n\t\tlet i = this.transitions.length;\n\n\t\twhile (i--) {\n\t\t\tconst transition = this.transitions[i];\n\n\t\t\tif (transition.program && now >= transition.program.end) {\n\t\t\t\ttransition.done();\n\t\t\t}\n\n\t\t\tif (transition.pending && now >= transition.pending.start) {\n\t\t\t\ttransition.start(transition.pending);\n\t\t\t}\n\n\t\t\tif (transition.running) {\n\t\t\t\ttransition.update(now);\n\t\t\t\tthis.running = true;\n\t\t\t} else if (!transition.pending) {\n\t\t\t\tthis.transitions.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tif (this.running) {\n\t\t\trequestAnimationFrame(this.bound);\n\t\t} else if (this.stylesheet) {\n\t\t\tlet i = this.stylesheet.cssRules.length;\n\t\t\twhile (i--) this.stylesheet.deleteRule(i);\n\t\t\tthis.activeRules = {};\n\t\t}\n\t},\n\n\tdeleteRule(node, name) {\n\t\tnode.style.animation = node.style.animation\n\t\t\t.split(', ')\n\t\t\t.filter(anim => anim && anim.indexOf(name) === -1)\n\t\t\t.join(', ');\n\t},\n\n\twait() {\n\t\tif (!transitionManager.promise) {\n\t\t\ttransitionManager.promise = Promise.resolve();\n\t\t\ttransitionManager.promise.then(() => {\n\t\t\t\ttransitionManager.promise = null;\n\t\t\t});\n\t\t}\n\n\t\treturn transitionManager.promise;\n\t}\n};\n\nfunction wrapAnimation(node, from, fn, params) {\n\tif (!from) return;\n\n\tconst to = node.getBoundingClientRect();\n\tif (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom) return;\n\n\tconst info = fn(node, { from, to }, params);\n\n\tconst duration = 'duration' in info ? info.duration : 300;\n\tconst delay = 'delay' in info ? info.delay : 0;\n\tconst ease = info.easing || linear;\n\tconst start = window.performance.now() + delay;\n\tconst end = start + duration;\n\n\tconst program = {\n\t\ta: 0,\n\t\tt: 0,\n\t\tb: 1,\n\t\tdelta: 1,\n\t\tduration,\n\t\tstart,\n\t\tend\n\t};\n\n\tconst cssText = node.style.cssText;\n\n\tconst animation = {\n\t\tpending: delay ? program : null,\n\t\tprogram: delay ? null : program,\n\t\trunning: true,\n\n\t\tstart() {\n\t\t\tif (info.css) {\n\t\t\t\tif (delay) node.style.cssText = cssText;\n\n\t\t\t\tconst rule = generateRule(program, ease, info.css);\n\t\t\t\tprogram.name = `__svelte_${hash(rule)}`;\n\n\t\t\t\ttransitionManager.addRule(rule, program.name);\n\n\t\t\t\tnode.style.animation = (node.style.animation || '')\n\t\t\t\t\t.split(', ')\n\t\t\t\t\t.filter(anim => anim && (program.delta < 0 || !/__svelte/.test(anim)))\n\t\t\t\t\t.concat(`${program.name} ${program.duration}ms linear 1 forwards`)\n\t\t\t\t\t.join(', ');\n\t\t\t}\n\n\t\t\tanimation.program = program;\n\t\t\tanimation.pending = null;\n\t\t},\n\n\t\tupdate: now => {\n\t\t\tconst p = now - program.start;\n\t\t\tconst t = program.a + program.delta * ease(p / program.duration);\n\t\t\tif (info.tick) info.tick(t, 1 - t);\n\t\t},\n\n\t\tdone() {\n\t\t\tif (info.tick) info.tick(1, 0);\n\t\t\tanimation.stop();\n\t\t},\n\n\t\tstop() {\n\t\t\tif (info.css) transitionManager.deleteRule(node, program.name);\n\t\t\tanimation.running = false;\n\t\t}\n\t};\n\n\ttransitionManager.add(animation);\n\n\tif (info.tick) info.tick(0, 1);\n\n\tif (delay) {\n\t\tif (info.css) node.style.cssText += info.css(0, 1);\n\t} else {\n\t\tanimation.start();\n\t}\n\n\treturn animation;\n}\n\nfunction fixPosition(node) {\n\tconst style = getComputedStyle(node);\n\n\tif (style.position !== 'absolute' && style.position !== 'fixed') {\n\t\tconst { width, height } = style;\n\t\tconst a = node.getBoundingClientRect();\n\t\tnode.style.position = 'absolute';\n\t\tnode.style.width = width;\n\t\tnode.style.height = height;\n\t\tconst b = node.getBoundingClientRect();\n\n\t\tif (a.left !== b.left || a.top !== b.top) {\n\t\t\tconst style = getComputedStyle(node);\n\t\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\n\t\t\tnode.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n\t\t}\n\t}\n}\n\nfunction handlePromise(promise, info) {\n\tvar token = info.token = {};\n\n\tfunction update(type, index, key, value) {\n\t\tif (info.token !== token) return;\n\n\t\tinfo.resolved = key && { [key]: value };\n\n\t\tconst child_ctx = assign(assign({}, info.ctx), info.resolved);\n\t\tconst block = type && (info.current = type)(info.component, child_ctx);\n\n\t\tif (info.block) {\n\t\t\tif (info.blocks) {\n\t\t\t\tinfo.blocks.forEach((block, i) => {\n\t\t\t\t\tif (i !== index && block) {\n\t\t\t\t\t\tgroupOutros();\n\t\t\t\t\t\tblock.o(() => {\n\t\t\t\t\t\t\tblock.d(1);\n\t\t\t\t\t\t\tinfo.blocks[i] = null;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinfo.block.d(1);\n\t\t\t}\n\n\t\t\tblock.c();\n\t\t\tblock[block.i ? 'i' : 'm'](info.mount(), info.anchor);\n\n\t\t\tinfo.component.root.set({}); // flush any handlers that were created\n\t\t}\n\n\t\tinfo.block = block;\n\t\tif (info.blocks) info.blocks[index] = block;\n\t}\n\n\tif (isPromise(promise)) {\n\t\tpromise.then(value => {\n\t\t\tupdate(info.then, 1, info.value, value);\n\t\t}, error => {\n\t\t\tupdate(info.catch, 2, info.error, error);\n\t\t});\n\n\t\t// if we previously had a then/catch block, destroy it\n\t\tif (info.current !== info.pending) {\n\t\t\tupdate(info.pending, 0);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (info.current !== info.then) {\n\t\t\tupdate(info.then, 1, info.value, promise);\n\t\t\treturn true;\n\t\t}\n\n\t\tinfo.resolved = { [info.value]: promise };\n\t}\n}\n\nfunction destroyBlock(block, lookup) {\n\tblock.d(1);\n\tlookup[block.key] = null;\n}\n\nfunction outroAndDestroyBlock(block, lookup) {\n\tblock.o(function() {\n\t\tdestroyBlock(block, lookup);\n\t});\n}\n\nfunction fixAndOutroAndDestroyBlock(block, lookup) {\n\tblock.f();\n\toutroAndDestroyBlock(block, lookup);\n}\n\nfunction updateKeyedEach(old_blocks, component, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, intro_method, next, get_context) {\n\tvar o = old_blocks.length;\n\tvar n = list.length;\n\n\tvar i = o;\n\tvar old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\n\tvar new_blocks = [];\n\tvar new_lookup = {};\n\tvar deltas = {};\n\n\tvar i = n;\n\twhile (i--) {\n\t\tvar child_ctx = get_context(ctx, list, i);\n\t\tvar key = get_key(child_ctx);\n\t\tvar block = lookup[key];\n\n\t\tif (!block) {\n\t\t\tblock = create_each_block(component, key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\tblock.p(changed, child_ctx);\n\t\t}\n\n\t\tnew_blocks[i] = new_lookup[key] = block;\n\n\t\tif (key in old_indexes) deltas[key] = Math.abs(i - old_indexes[key]);\n\t}\n\n\tvar will_move = {};\n\tvar did_move = {};\n\n\tfunction insert(block) {\n\t\tblock[intro_method](node, next);\n\t\tlookup[block.key] = block;\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\n\twhile (o && n) {\n\t\tvar new_block = new_blocks[n - 1];\n\t\tvar old_block = old_blocks[o - 1];\n\t\tvar new_key = new_block.key;\n\t\tvar old_key = old_block.key;\n\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t}\n\n\t\telse if (!new_lookup[old_key]) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t}\n\n\t\telse if (!lookup[new_key] || will_move[new_key]) {\n\t\t\tinsert(new_block);\n\t\t}\n\n\t\telse if (did_move[old_key]) {\n\t\t\to--;\n\n\t\t} else if (deltas[new_key] > deltas[old_key]) {\n\t\t\tdid_move[new_key] = true;\n\t\t\tinsert(new_block);\n\n\t\t} else {\n\t\t\twill_move[old_key] = true;\n\t\t\to--;\n\t\t}\n\t}\n\n\twhile (o--) {\n\t\tvar old_block = old_blocks[o];\n\t\tif (!new_lookup[old_block.key]) destroy(old_block, lookup);\n\t}\n\n\twhile (n) insert(new_blocks[n - 1]);\n\n\treturn new_blocks;\n}\n\nfunction measure(blocks) {\n\tconst rects = {};\n\tlet i = blocks.length;\n\twhile (i--) rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n\treturn rects;\n}\n\nfunction animate(blocks, rects, fn, params) {\n\tlet i = blocks.length;\n\twhile (i--) {\n\t\tconst block = blocks[i];\n\t\tconst from = rects[block.key];\n\n\t\tif (!from) continue;\n\t\tconst to = block.node.getBoundingClientRect();\n\n\t\tif (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom) continue;\n\n\n\t}\n}\n\nfunction getSpreadUpdate(levels, updates) {\n\tvar update = {};\n\n\tvar to_null_out = {};\n\tvar accounted_for = {};\n\n\tvar i = levels.length;\n\twhile (i--) {\n\t\tvar o = levels[i];\n\t\tvar n = updates[i];\n\n\t\tif (n) {\n\t\t\tfor (var key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\n\t\t\tfor (var key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (var key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\n\treturn update;\n}\n\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nconst invalidAttributeNameCharacter = /[\\s'\">\\/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n\nfunction spread(args) {\n\tconst attributes = Object.assign({}, ...args);\n\tlet str = '';\n\n\tObject.keys(attributes).forEach(name => {\n\t\tif (invalidAttributeNameCharacter.test(name)) return;\n\n\t\tconst value = attributes[name];\n\t\tif (value === undefined) return;\n\t\tif (value === true) str += \" \" + name;\n\n\t\tconst escaped = String(value)\n\t\t\t.replace(/\"/g, '&#34;')\n\t\t\t.replace(/'/g, '&#39;');\n\n\t\tstr += \" \" + name + \"=\" + JSON.stringify(escaped);\n\t});\n\n\treturn str;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t\"'\": '&#39;',\n\t'&': '&amp;',\n\t'<': '&lt;',\n\t'>': '&gt;'\n};\n\nfunction escape(html) {\n\treturn String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\n\nfunction each(items, assign, fn) {\n\tlet str = '';\n\tfor (let i = 0; i < items.length; i += 1) {\n\t\tstr += fn(assign(items[i], i));\n\t}\n\treturn str;\n}\n\nconst missingComponent = {\n\t_render: () => ''\n};\n\nfunction validateSsrComponent(component, name) {\n\tif (!component || !component._render) {\n\t\tif (name === 'svelte:component') name += ' this={...}';\n\t\tthrow new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n\t}\n\n\treturn component;\n}\n\nfunction debug(file, line, column, values) {\n\tconsole.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`);\n\tconsole.log(values);\n\treturn '';\n}\n\nfunction blankObject() {\n\treturn Object.create(null);\n}\n\nfunction destroy(detach) {\n\tthis.destroy = noop;\n\tthis.fire('destroy');\n\tthis.set = noop;\n\n\tthis._fragment.d(detach !== false);\n\tthis._fragment = null;\n\tthis._state = {};\n}\n\nfunction destroyDev(detach) {\n\tdestroy.call(this, detach);\n\tthis.destroy = function() {\n\t\tconsole.warn('Component was already destroyed');\n\t};\n}\n\nfunction _differs(a, b) {\n\treturn a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\n\nfunction _differsImmutable(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\nfunction fire(eventName, data) {\n\tvar handlers =\n\t\teventName in this._handlers && this._handlers[eventName].slice();\n\tif (!handlers) return;\n\n\tfor (var i = 0; i < handlers.length; i += 1) {\n\t\tvar handler = handlers[i];\n\n\t\tif (!handler.__calling) {\n\t\t\ttry {\n\t\t\t\thandler.__calling = true;\n\t\t\t\thandler.call(this, data);\n\t\t\t} finally {\n\t\t\t\thandler.__calling = false;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction flush(component) {\n\tcomponent._lock = true;\n\tcallAll(component._beforecreate);\n\tcallAll(component._oncreate);\n\tcallAll(component._aftercreate);\n\tcomponent._lock = false;\n}\n\nfunction get() {\n\treturn this._state;\n}\n\nfunction init(component, options) {\n\tcomponent._handlers = blankObject();\n\tcomponent._slots = blankObject();\n\tcomponent._bind = options._bind;\n\tcomponent._staged = {};\n\n\tcomponent.options = options;\n\tcomponent.root = options.root || component;\n\tcomponent.store = options.store || component.root.store;\n\n\tif (!options.root) {\n\t\tcomponent._beforecreate = [];\n\t\tcomponent._oncreate = [];\n\t\tcomponent._aftercreate = [];\n\t}\n}\n\nfunction on(eventName, handler) {\n\tvar handlers = this._handlers[eventName] || (this._handlers[eventName] = []);\n\thandlers.push(handler);\n\n\treturn {\n\t\tcancel: function() {\n\t\t\tvar index = handlers.indexOf(handler);\n\t\t\tif (~index) handlers.splice(index, 1);\n\t\t}\n\t};\n}\n\nfunction set(newState) {\n\tthis._set(assign({}, newState));\n\tif (this.root._lock) return;\n\tflush(this.root);\n}\n\nfunction _set(newState) {\n\tvar oldState = this._state,\n\t\tchanged = {},\n\t\tdirty = false;\n\n\tnewState = assign(this._staged, newState);\n\tthis._staged = {};\n\n\tfor (var key in newState) {\n\t\tif (this._differs(newState[key], oldState[key])) changed[key] = dirty = true;\n\t}\n\tif (!dirty) return;\n\n\tthis._state = assign(assign({}, oldState), newState);\n\tthis._recompute(changed, this._state);\n\tif (this._bind) this._bind(changed, this._state);\n\n\tif (this._fragment) {\n\t\tthis.fire(\"state\", { changed: changed, current: this._state, previous: oldState });\n\t\tthis._fragment.p(changed, this._state);\n\t\tthis.fire(\"update\", { changed: changed, current: this._state, previous: oldState });\n\t}\n}\n\nfunction _stage(newState) {\n\tassign(this._staged, newState);\n}\n\nfunction setDev(newState) {\n\tif (typeof newState !== 'object') {\n\t\tthrow new Error(\n\t\t\tthis._debugName + '.set was called without an object of data key-values to update.'\n\t\t);\n\t}\n\n\tthis._checkReadOnly(newState);\n\tset.call(this, newState);\n}\n\nfunction callAll(fns) {\n\twhile (fns && fns.length) fns.shift()();\n}\n\nfunction _mount(target, anchor) {\n\tthis._fragment[this._fragment.i ? 'i' : 'm'](target, anchor || null);\n}\n\nvar PENDING = {};\nvar SUCCESS = {};\nvar FAILURE = {};\n\nfunction removeFromStore() {\n\tthis.store._remove(this);\n}\n\nvar proto = {\n\tdestroy,\n\tget,\n\tfire,\n\ton,\n\tset,\n\t_recompute: noop,\n\t_set,\n\t_stage,\n\t_mount,\n\t_differs\n};\n\nvar protoDev = {\n\tdestroy: destroyDev,\n\tget,\n\tfire,\n\ton,\n\tset: setDev,\n\t_recompute: noop,\n\t_set,\n\t_stage,\n\t_mount,\n\t_differs\n};\n\nexport { blankObject, destroy, destroyDev, _differs, _differsImmutable, fire, flush, get, init, on, set, _set, _stage, setDev, callAll, _mount, PENDING, SUCCESS, FAILURE, removeFromStore, proto, protoDev, wrapAnimation, fixPosition, handlePromise, append, insert, detachNode, detachBetween, detachBefore, detachAfter, reinsertBetween, reinsertChildren, reinsertAfter, reinsertBefore, destroyEach, createFragment, createElement, createSvgElement, createText, createComment, addListener, removeListener, setAttribute, setAttributes, setCustomElementData, removeAttribute, setXlinkAttribute, getBindingGroupValue, toNumber, timeRangesToArray, children, claimElement, claimText, setData, setInputType, setStyle, selectOption, selectOptions, selectValue, selectMultipleValue, addResizeListener, toggleClass, destroyBlock, outroAndDestroyBlock, fixAndOutroAndDestroyBlock, updateKeyedEach, measure, animate, getSpreadUpdate, invalidAttributeNameCharacter, spread, escaped, escape, each, missingComponent, validateSsrComponent, debug, linear, generateRule, hash, wrapTransition, outros, groupOutros, transitionManager, noop, assign, assignTrue, isPromise, callAfter, addLoc, exclude, run };\n","export default {\n  exampleHeadline: \"Text output in the console in\",\n  exampleSpan: \" color\",\n  methodName: \"method\",\n  exampleToUseHeadline: \"example to use\",\n  exampleCommandTextUseMethod: \"cl.yel('Hi, I'm \",\n  resultTextUseMethod: \"Hi, I'm \"\n}\n","export default {\n  colorName: \"red\",\n  methodName: \"red\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  colorName: \"green\",\n  methodName: \"gre\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  colorName: \"yellow\",\n  methodName: \"yel\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  colorName: \"blue\",\n  methodName: \"blu\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  colorName: \"magenta\",\n  methodName: \"mag\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  colorName: \"cyan\",\n  methodName: \"cya\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  colorName: \"white\",\n  methodName: \"whi\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  colorName: \"usual console.log\",\n  methodName: \"log\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  exampleHeadline: \"Text output in the console in\",\n  exampleSpan: \" color\",\n  exampleToUseHeadline: \"example to use\",\n  exampleCommandTextUseMethod: \"cl.yel('Hi, I'm \",\n  resultTextUseMethod: \"Hi, I'm \"\n}\n","export default {\n  colorName: \"red\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  colorName: \"green\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  colorName: \"yellow\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  colorName: \"blue\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  colorName: \"magenta\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  colorName: \"cyan\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  colorName: \"white\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  colorName: \"usual console.log\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  exampleHeadline: \"Text output in the console in\",\n  exampleSpan: \" color\",\n  exampleToUseHeadline: \"example to use\",\n  exampleCommandTextUseMethod: \"cl.yel('Hi, I'm \",\n  resultTextUseMethod: \"Hi, I'm \"\n}\n","export default {\n  colorName: \"red\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  colorName: \"green\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  colorName: \"yellow\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  colorName: \"blue\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  colorName: \"magenta\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  colorName: \"cyan\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  colorName: \"white\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","export default {\n  colorName: \"usual console.log\",\n  exampleText:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n}\n","/**\n *  добавить слово импорт)\n *  перевести для дирректорий ru и by\n */\n\n// Text on english language\nimport methodsDataEn from \"./en/documentation/methods/methods\"\nimport methodRedEn from \"./en/documentation/methods/red\"\nimport methodGreEn from \"./en/documentation/methods/gre\"\nimport methodYelEn from \"./en/documentation/methods/yel\"\nimport methodBluEn from \"./en/documentation/methods/blu\"\nimport methodMagEn from \"./en/documentation/methods/mag\"\nimport methodCyaEn from \"./en/documentation/methods/cya\"\nimport methodWhiEn from \"./en/documentation/methods/whi\"\nimport methodLogEn from \"./en/documentation/methods/log\"\n// Text on Ru,ssian language\nimport methodsDataRu from \"./ru/documentation/methods/methods\"\nimport methodRedRu from \"./ru/documentation/methods/red\"\nimport methodGreRu from \"./ru/documentation/methods/gre\"\nimport methodYelRu from \"./ru/documentation/methods/yel\"\nimport methodBluRu from \"./ru/documentation/methods/blu\"\nimport methodMagRu from \"./ru/documentation/methods/mag\"\nimport methodCyaRu from \"./ru/documentation/methods/cya\"\nimport methodWhiRu from \"./ru/documentation/methods/whi\"\nimport methodLogRu from \"./ru/documentation/methods/log\"\n// Text on belaRu,sian language\nimport methodsDataBy from \"./by/documentation/methods/methods\"\nimport methodRedBy from \"./by/documentation/methods/red\"\nimport methodGreBy from \"./by/documentation/methods/gre\"\nimport methodYelBy from \"./by/documentation/methods/yel\"\nimport methodBluBy from \"./by/documentation/methods/blu\"\nimport methodMagBy from \"./by/documentation/methods/mag\"\nimport methodCyaBy from \"./by/documentation/methods/cya\"\nimport methodWhiBy from \"./by/documentation/methods/whi\"\nimport methodLogBy from \"./by/documentation/methods/log\"\n\nconst allData = {\n  // Text on english language\n  methodsDataEn,\n  methodRedEn,\n  methodGreEn,\n  methodYelEn,\n  methodBluEn,\n  methodMagEn,\n  methodCyaEn,\n  methodWhiEn,\n  methodLogEn,\n  methodsDataRu,\n  methodRedRu,\n  methodGreRu,\n  methodYelRu,\n  methodBluRu,\n  methodMagRu,\n  methodCyaRu,\n  methodWhiRu,\n  methodLogRu,\n  methodsDataBy,\n  methodRedBy,\n  methodGreBy,\n  methodYelBy,\n  methodBluBy,\n  methodMagBy,\n  methodCyaBy,\n  methodWhiBy,\n  methodLogBy\n}\n\nexport default allData\n","/**\n * \t@description The constructor cl (Colorful console log) - (short for colorLog) is syntactic sugar,\n * It is intended to create a shortened record of a frequently used command console.log ().\n * It also has a number of methods for color output of information. Methods have short-\n * First names, first three letters of color in which the information will be displayed.\n * @param {bla} - (abbreviated from 'black'), the information is highlighted in black.\n * @param {red} - information is highlighted in red.\n * @param {gre} - (short for 'green'), the information is highlighted in green.\n * @param {yel} - (short for 'yellow'), the information is highlighted in yellow.\n * @param {blu} - (abbreviated from 'blue'), the information is highlighted in blue.\n * @param {mag} - (short for 'magenta'), the information is highlighted in the color of the magenta.\n * @param {cya} - (abbreviated from 'cyan'), the information is highlighted in the color of cyan.\n * @param {whi} - (abbreviated from 'white'), the information is highlighted in white.\n * There are also other methods.\n * @param {methods} - lists all methods for color output of information.\n * @param {log} - normal logging as with console.log ().\n * @param {dir} - displays the list of properties of the specified object, as with console.dir\n * @description Takes only one argument.\n * @param {content} - what you need to output to the console..\n */\nclass colorLog {\n  constructor(content) {\n    this.content = content;\n  }\n  bla(content) {\n    console.log('');\n    console.log('\\x1b[30m', content)\n    console.log('\\x1b[37m', '');\n  }\n  red(content) {\n    console.log('');\n    console.log('\\x1b[31m', content)\n    console.log('\\x1b[37m', '');\n  }\n  gre(content) {\n    console.log('');\n    console.log('\\x1b[32m', content)\n    console.log('\\x1b[37m', '');\n  }\n  yel(content) {\n    console.log('');\n    console.log('\\x1b[33m', content)\n    console.log('\\x1b[37m', '');\n  }\n  blu(content) {\n    console.log('');\n    console.log('\\x1b[34m', content)\n    console.log('\\x1b[37m', '');\n  }\n  mag(content) {\n    console.log('');\n    console.log('\\x1b[35m', content)\n    console.log('\\x1b[37m', '');\n\n  }\n  cya(content) {\n    console.log('');\n    console.log('\\x1b[36m', content)\n    console.log('\\x1b[37m', '');\n  }\n  whi(content) {\n    console.log('');\n    console.log('\\x1b[37m', content)\n    console.log('');\n  }\n  methods() {\n    // for (let func in log){\n    // \tconsole.log(func)\n    // };\n\n    // console.log(Object.keys(cl))\n\n  }\n  dir(content) {\n    console.dir(content);\n\n  }\n  log(content) {\n    console.log(content)\n  }\n}\n\nconst cl = new colorLog();\n\nmodule.exports = cl;\n","<div class=\"container-checkbox\">\n  <!--\n    <div class=\"wrap-checkbox-round\">\n    <div class=\"round\">\n      <input on:click=\"printInfoForMethodRed()\" class={classeColorCheckbox} id={idCheckboxes} type=\"radio\"   />\n      <label for={labelForIdCheckboxes}></label>\n    </div>\n  -->\n\n  <p class=\"{classesColorText}\">\n    <input\n      on:click=\"printInfoForMethodRed()\"\n      name=\"color\"\n      type=\"radio\"\n      checked\n    />\n    {methodName}\n  </p>\n</div>\n\n<script>\n  import allData from \"../../../data/allData\"\n  import cl from \"node-cl-log\"\n\n  export default {\n    data() {\n      return {\n        classeColorCheckbox: \"color-checkbox__input_color_red\",\n        classesColorText: \"color-text__method-red\",\n        // labelForIdCheckboxes: \"red\",\n        // idCheckboxes: \"red\",\n        methodName: allData.methodRedEn.methodName\n      }\n    },\n    methods: {\n      printInfoForMethodRed() {\n        store.set({\n          classColorText: \"color-text__method-red\",\n          classSection: \"red-command\",\n          methodName: allData.methodRedEn.methodName,\n          colorNameOnPage: allData.methodRedEn.colorName,\n          exampleTextOnPage: allData.methodRedEn.exampleText\n          // colorNameRu: allData.methodRedRu.colorName,\n          // exampleTextRu: allData.methodRedRu.exampleText,\n          // colorNameBy: allData.methodRedBy.colorName,\n          // exampleTextBy: allData.methodRedBy.exampleText,\n        })\n        // cl.red(`Hi, I'm red color text!`)\n      }\n    }\n  }\n</script>\n\n<style>\n  .round\n    input[type=\"checkbox\"].color-checkbox__input_color_red:checked\n    + label {\n    background-color: #ec0d0d;\n    border-color: #ec0d0d;\n  }\n\n  .color-text__method-red {\n    color: #ec0d0d;\n  }\n</style>\n","<div class=\"container-checkbox\">\n  <!--\n    <div class=\"wrap-checkbox-round\">\n      <div class=\"round\">\n        <input on:click=\"printInfoForMethodGre()\" class={classeColorCheckbox} id={idCheckboxes} type=\"radio\" />\n        <label for={labelForIdCheckboxes}></label>\n      </div>\n    </div>\n  -->\n\n  <p class=\"color {classesColorText}\">\n    <input on:click=\"printInfoForMethodGre()\" name=\"color\" type=\"radio\" />\n    {methodName}\n  </p>\n</div>\n\n<script>\n  import allData from \"../../../data/allData\"\n  import cl from \"node-cl-log\"\n\n  export default {\n    data() {\n      return {\n        classeColorCheckbox: \"color-checkbox__input_color_green\",\n        classesColorText: \"color-text__method-green\",\n        // labelForIdCheckboxes: \"green\",\n        // idCheckboxes: \"green\",\n        methodName: allData.methodGreEn.methodName\n      }\n    },\n    methods: {\n      printInfoForMethodGre() {\n        store.set({\n          classColorText: \"color-text__method-green\",\n          classSection: \"gre-command\",\n          methodName: allData.methodGreEn.methodName,\n          colorNameOnPage: allData.methodGreEn.colorName,\n          exampleTextOnPage: allData.methodGreEn.exampleText\n          // colorNameRu: allData.methodGreRu.colorName,\n          // exampleTextRu: allData.methodGreRu.exampleText,\n          // colorNameBy: allData.methodGreBy.colorName,\n          // exampleTextBy: allData.methodGreBy.exampleText\n        })\n        // cl.gre(`Hi, I'm green color text!`)\n      }\n    }\n  }\n</script>\n\n<style>\n  .round\n    input[type=\"checkbox\"].color-checkbox__input_color_green:checked\n    + label {\n    background-color: #37cb04;\n    border-color: #37cb04;\n  }\n\n  .color-text__method-green {\n    color: #37cb04;\n  }\n</style>\n","<div class=\"container-checkbox\">\n  <!--\n    <div class=\"wrap-checkbox-round\">\n      <div class=\"round\">\n        <input on:click=\"printInfoForMethodYel()\" class={$classeColorCheckbox} id={$idCheckboxes} type=\"checkbox\" />\n        <label for={$labelForIdCheckboxes}></label>\n      </div>\n    </div>\n    <p class={$classesColorText}>{text}</p>\n  -->\n  <p class=\"{classesColorText}\">\n    <input on:click=\"printInfoForMethodYel()\" name=\"color\" type=\"radio\" />\n    {methodName}\n  </p>\n</div>\n\n<script>\n  import allData from \"../../../data/allData\"\n  import cl from \"node-cl-log\"\n\n  export default {\n    data() {\n      return {\n        classeColorCheckbox: \"color-checkbox__input_color_yellow\",\n        classesColorText: \"color-text__method-yellow\",\n        // labelForIdCheckboxes: \"yellow\",\n        // idCheckboxes: \"yellow\",\n        methodName: allData.methodYelEn.methodName\n      }\n    },\n    methods: {\n      printInfoForMethodYel() {\n        store.set({\n          classColorText: \"color-text__method-yellow\",\n          classSection: \"yel-command\",\n          methodName: allData.methodYelEn.methodName,\n          colorNameOnPage: allData.methodYelEn.colorName,\n          exampleTextOnPage: allData.methodYelEn.exampleText\n          // colorNameRu: allData.methodYelRu.colorName,\n          // exampleTextRu: allData.methodYelRu.exampleText,\n          // colorNameBy: allData.methodYelBy.colorName,\n          // exampleTextBy: allData.methodYelBy.exampleText\n        })\n        // cl.yel(`Hi, I'm yellow color text!`)\n      }\n    }\n  }\n</script>\n\n<style>\n  .round\n    input[type=\"checkbox\"].color-checkbox__input_color_yellow:checked\n    + label {\n    background-color: #dadf08;\n    border-color: #dadf08;\n  }\n\n  .color-text__method-yellow {\n    color: #dadf08;\n  }\n</style>\n","<div class=\"container-checkbox\">\n  <!--\n    <div class=\"wrap-checkbox-round\">\n      <div class=\"round\">\n        <input on:click=\"printInfoForMethodMag()\" class={$classeColorCheckbox} id={$idCheckboxes} type=\"checkbox\" />\n        <label for={$labelForIdCheckboxes}></label>\n      </div>\n    </div>\n    <p class={$classesColorText}>{text}</p>\n  -->\n  <p class=\"{classesColorText}\">\n    <input on:click=\"printInfoForMethodMag()\" name=\"color\" type=\"radio\" />\n    {methodName}\n  </p>\n</div>\n\n<script>\n  import allData from \"../../../data/allData\"\n  import cl from \"node-cl-log\"\n\n  export default {\n    data() {\n      return {\n        classeColorCheckbox: \"color-checkbox__input_color_magenta\",\n        classesColorText: \"color-text__method-magenta\",\n        // labelForIdCheckboxes: \"magenta\",\n        // idCheckboxes: \"magenta\",\n        methodName: allData.methodMagEn.methodName\n        // text: \"mag\"\n      }\n    },\n    methods: {\n      printInfoForMethodMag() {\n        store.set({\n          classColorText: \"color-text__method-magenta\",\n          classSection: \"mag-command\",\n          methodName: allData.methodMagEn.methodName,\n          colorNameOnPage: allData.methodMagEn.colorName,\n          exampleTextOnPage: allData.methodMagEn.exampleText\n          // colorNameRu: allData.methodMagRu.colorName,\n          // exampleTextRu: allData.methodMagRu.exampleText,\n          // colorNameBy: allData.methodMagBy.colorName,\n          // exampleTextBy: allData.methodMagBy.exampleText\n        })\n        // cl.mag(`Hi, I'm magenta color text!`)\n      }\n    }\n  }\n</script>\n\n<style>\n  .round\n    input[type=\"checkbox\"].color-checkbox__input_color_magenta:checked\n    + label {\n    background-color: #8b06ba;\n    border-color: #8b06ba;\n  }\n\n  .color-text__method-magenta {\n    color: #8b06ba;\n  }\n</style>\n","<div class=\"container-checkbox\">\n  <!--\n    <div class=\"wrap-checkbox-round\">\n        <div class=\"round\">\n          <input on:click=\"printInfoForMethodCya()\" class={$classeColorCheckbox} id={$idCheckboxes} type=\"checkbox\" />\n          <label for={$labelForIdCheckboxes}></label>\n        </div>\n    </div>\n    <p class={$classesColorText}>{text}</p>\n  -->\n\n  <p class=\"{classesColorText}\">\n    <input on:click=\"printInfoForMethodCya()\" name=\"color\" type=\"radio\" />\n    {methodName}\n  </p>\n</div>\n\n<script>\n  import allData from \"../../../data/allData\"\n  import cl from \"node-cl-log\"\n\n  export default {\n    data() {\n      return {\n        classeColorCheckbox: \"color-checkbox__input_color_cyan\",\n        classesColorText: \"color-text__method-cyan\",\n        // labelForIdCheckboxes: \"cyan\",\n        // idCheckboxes: \"cyan\",\n        methodName: allData.methodCyaEn.methodName\n      }\n    },\n    methods: {\n      printInfoForMethodCya() {\n        store.set({\n          classColorText: \"color-text__method-cyan\",\n          classSection: \"cya-command\",\n          methodName: allData.methodCyaEn.methodName,\n          colorNameOnPage: allData.methodCyaEn.colorName,\n          exampleTextEn: allData.methodCyaEn.exampleText\n          // colorNameRu: allData.methodCyaRu.colorName,\n          // exampleTextRu: allData.methodCyaRu.exampleText,\n          // colorNameBy: allData.methodCyaBy.colorName,\n          // exampleTextBy: allData.methodCyaBy.exampleText\n        })\n        // cl.cya(`Hi, I'm cyan color text!`)\n      }\n    }\n  }\n</script>\n\n<style>\n  .round\n    input[type=\"checkbox\"].color-checkbox__input_color_cyan:checked\n    + label {\n    border-color: #04c0cc;\n    background-color: #04c0cc;\n  }\n\n  .color-text__method-cyan {\n    color: #04c0cc;\n  }\n</style>\n","<div class=\"container-checkbox\">\n  <!--\n    <div class=\"wrap-checkbox-round\">\n      <div class=\"round\">\n        <input on:click=\"printInfoForMethodWhi()\" class={$classeColorCheckbox} id={$idCheckboxes} type=\"checkbox\" />\n        <label for={$labelForIdCheckboxes}></label>\n      </div>\n    </div>\n    <p class={$classesColorText}>{text}</p>\n  -->\n  <p class=\"{classesColorText}\">\n    <input on:click=\"printInfoForMethodWhi()\" name=\"color\" type=\"radio\" />\n    {methodName}\n  </p>\n</div>\n\n<script>\n  import allData from \"../../../data/allData\"\n  import cl from \"node-cl-log\"\n\n  export default {\n    data() {\n      return {\n        classeColorCheckbox: \"color-checkbox__input_color_white\",\n        classesColorText: \"color-text__method-white\",\n        // labelForIdCheckboxes: \"white\",\n        // idCheckboxes: \"white\",\n        methodName: allData.methodWhiEn.methodName\n      }\n    },\n    methods: {\n      printInfoForMethodWhi() {\n        store.set({\n          classColorText: \"color-text__method-white\",\n          classSection: \"whi-command\",\n          methodName: allData.methodWhiEn.methodName,\n          colorNameOnPage: allData.methodWhiEn.colorName,\n          exampleTextOnPage: allData.methodWhiEn.exampleText\n          // colorNameRu: allData.methodWhiRu.colorName,\n          // exampleTextRu: allData.methodWhiRu.exampleText,\n          // colorNameBy: allData.methodWhiBy.colorName,\n          // exampleTextBy: allData.methodWhiBy.exampleText\n        })\n        // cl.whi(`Hi, I'm white color text!`)\n      }\n    }\n  }\n</script>\n","<div class=\"container-checkbox\">\n  <!--\n    <div class=\"wrap-checkbox-round\">\n      <div class=\"round\">\n        <input on:click=\"printInfoForMethodLog()\" class={$classeColorCheckbox} id={$idCheckboxes} type=\"checkbox\" />\n        <label for={$labelForIdCheckboxes}></label>\n      </div>\n    </div>\n    <p class={$classesColorText}>{text}</p>\n  -->\n\n  <p class=\"{classesColorText}\">\n    <input on:click=\"printInfoForMethodLog()\" name=\"color\" type=\"radio\" />\n    {methodName}\n  </p>\n</div>\n\n<script>\n  import allData from \"../../../data/allData\"\n  import cl from \"node-cl-log\"\n\n  export default {\n    data() {\n      return {\n        classeColorCheckbox: \"color-checkbox__input_color_log\",\n        classesColorText: \"color-text__method-log\",\n        // labelForIdCheckboxes: \"log\",\n        // idCheckboxes: \"log\",\n        methodName: allData.methodLogEn.methodName\n      }\n    },\n    methods: {\n      printInfoForMethodLog() {\n        store.set({\n          classColorText: \"color-text__method-log\",\n          classSection: \"log-command\",\n          methodName: allData.methodLogEn.methodName,\n          colorNameOnPage: allData.methodLogEn.colorName,\n          exampleTextOnPage: allData.methodLogEn.exampleText\n          // colorNameRu: allData.methodLogRu.colorName,\n          // exampleTextRu: allData.methodLogRu.exampleText,\n          // colorNameBy: allData.methodLogBy.colorName,\n          // exampleTextBy: allData.methodLogBy.exampleText\n        })\n\n        // cl.log(`Hi, I'm usual console.log!`)\n      }\n    }\n  }\n</script>\n\n<style>\n  .round\n    input[type=\"checkbox\"].color-checkbox__input_color_white:checked\n    + label,\n  .round\n    input[type=\"checkbox\"].color-checkbox__input_color_log:checked\n    + label {\n    background-color: #c4c4c4;\n    border-color: #c4c4c4;\n  }\n\n  .color-text__method-white,\n  .color-text__method-log\n    :global(h5.example-to-use__headline, p.arrow, p.result-text, p.color) {\n    color: #c4c4c4;\n  }\n</style>\n","<button on:click=\"printAllMethods()\">All methods</button>\n\n<!-- {$hiddenAllMethods} -->\n\n{#each methodsAttributes as method}\n<section class=\"example {method.classSection}\" hidden=\"\">\n  <h3 class=\"example__headline\">\n    {$exampleToUseHeadlineOnPage}\n    <span class=\"{method.classColorText}\">{method.colorNameOnPage}</span> color\n  </h3>\n  <p class=\"example__text\">{method.exampleTextOnPage}</p>\n  <div class=\"example-to-use \">\n    <h5 class=\"example-to-use__headline {method.classColorText}\">\n      example to use:\n    </h5>\n    <div class=\"example-command\">\n      <code class=\"example-command__text\">\n        const cl = require('node-cl-log'); <br />\n        cl.{method.methodName}('Hi, I'm {method.colorNameOnPage} text!');\n      </code>\n      <div class=\"result-command-wrap\">\n        <p class=\"arrow {method.classColorText}\"></p>\n        <p class=\"result-text {method.classColorText}\">\n          Hi, I'm {method.colorNameOnPage} color text!'\n        </p>\n      </div>\n    </div>\n  </div>\n</section>\n{/each}\n\n<!--\n  dataEn : {\n    exampleHeadline: allData.methodsDataEn.exampleHeadline,\n    exampleSpan:  allData.methodsDataEn.exampleSpan,\n    exampleToUseHeadline: allData.methodsDataEn.exampleToUseHeadline,\n    exampleCommandTextUseMethod: allData.methodsDataEn.exampleCommandTextUseMethod,\n    resultTextUseMethod:  allData.methodsDataEn.resultTextUseMethod\n  },\n  dataRu : {\n    exampleHeadline: allData.methodsDataRu.exampleHeadline,\n    exampleSpan:  allData.methodsDataRu.exampleSpan,\n    exampleToUseHeadline: allData.methodsDataRu.exampleToUseHeadline,\n    exampleCommandTextUseMethod: allData.methodsDataRu.exampleCommandTextUseMethod,\n    resultTextUseMethod:  allData.methodsDataRu.resultTextUseMethod\n  },\n  dataBy : {\n    exampleHeadline: allData.methodsDataBy.exampleHeadline,\n    exampleSpan:  allData.methodsDataBy.exampleSpan,\n    exampleToUseHeadline: allData.methodsDataBy.exampleToUseHeadline,\n    exampleCommandTextUseMethod: allData.methodsDataBy.exampleCommandTextUseMethod,\n    resultTextUseMethod:  allData.methodsDataBy.resultTextUseMethod\n  },\n-->\n\n<script>\n  import allData from \"../../data/allData\"\n  import cl from \"node-cl-log\"\n\n  export default {\n    data() {\n      return {\n        methodsAttributes: [\n          {\n            classColorText: \"color-text__method-red\",\n            classSection: \"red-command\",\n            methodName: allData.methodRedEn.methodName,\n            colorNameOnPage: allData.methodRedEn.colorName,\n            exampleTextOnPage: allData.methodRedEn.exampleText\n          },\n          {\n            classColorText: \"color-text__method-green\",\n            classSection: \"gre-command\",\n            methodName: allData.methodGreEn.methodName,\n            colorNameOnPage: allData.methodGreEn.colorName,\n            exampleTextOnPage: allData.methodGreEn.exampleText\n          },\n          {\n            classColorText: \"color-text__method-yellow\",\n            classSection: \"yel-command\",\n            methodName: allData.methodYelEn.methodName,\n            colorNameOnPage: allData.methodYelEn.colorName,\n            exampleTextOnPage: allData.methodYelEn.exampleText\n          },\n          {\n            classColorText: \"color-text__method-blue\",\n            classSection: \"blu-command\",\n            methodName: allData.methodBluEn.methodName,\n            colorNameEn: allData.methodBluEn.colorName,\n            exampleTextEn: allData.methodBluEn.exampleText\n          },\n          {\n            classColorText: \"color-text__method-magenta\",\n            classSection: \"mag-command\",\n            methodName: allData.methodMagEn.methodName,\n            colorNameOnPage: allData.methodMagEn.colorName,\n            exampleTextOnPage: allData.methodMagEn.exampleText\n          },\n          {\n            classColorText: \"color-text__method-cyan\",\n            classSection: \"cya-command\",\n            methodName: allData.methodCyaEn.methodName,\n            colorNameOnPage: allData.methodCyaEn.colorName,\n            exampleTextEn: allData.methodCyaEn.exampleText\n          },\n          {\n            classColorText: \"color-text__method-white\",\n            classSection: \"whi-command\",\n            methodName: allData.methodWhiEn.methodName,\n            colorNameOnPage: allData.methodWhiEn.colorName,\n            exampleTextOnPage: allData.methodWhiEn.exampleText\n          },\n          {\n            classColorText: \"color-text__method-log\",\n            classSection: \"log-command\",\n            methodName: allData.methodLogEn.methodName,\n            colorNameOnPage: allData.methodLogEn.colorName,\n            exampleTextOnPage: allData.methodLogEn.exampleText\n          }\n        ]\n      }\n    },\n    methods: {\n      printAllMethods() {\n        store.set({\n          // hiddenAllMethods: !hiddenAllMethods,\n          // hiddenInfoForMethod: !hiddenInfoForMethod\n        })\n\n        // console.log(store.get())\n\n        // cl.red(`Hi, I'm red color text!`)\n        // cl.gre(`Hi, I'm green color text!`)\n        // cl.yel(`Hi, I'm yellow color text!`)\n        // cl.blu(`Hi, I'm blu color text!`)\n        // cl.mag(`Hi, I'm magenta color text!`)\n        // cl.cya(`Hi, I'm cyan color text!`)\n        // cl.log(`Hi, I'm usual console.log!`)\n        // cl.whi(`Hi, I'm white color text!`)\n      }\n    }\n  }\n</script>\n\n<style>\n  .color-methods-panel {\n    width: 84%;\n    margin: 0 auto;\n  }\n\n  .color-text__method-magenta {\n    color: #8b06ba;\n  }\n\n  .color-text__method-green {\n    color: #37cb04;\n  }\n\n  .color-text__method-blue {\n    color: #077fd7;\n  }\n\n  .color-text__method-cyan {\n    color: #04c0cc;\n  }\n\n  .color-text__method-yellow {\n    color: #dadf08;\n  }\n\n  .color-text__method-red {\n    color: #ec0d0d;\n  }\n</style>\n","<!--\n  {#if $languagePage==\"ru\"}\n    <p>{x} is less than 5</p>\n  {:elseif $languagePage==\"by\"}\n    <p>{x} is less than 5</p>\n  {:else}\n    <p>english (default)</p>\n-->\n<!-- {/if} -->\n\n<section class=\"example {$classSection}\" hidden=\"{$hiddenInfoForMethod}\">\n  <h3 class=\"example__headline\">\n    {$exampleToUseHeadlineOnPage}\n    <span class=\"{$classColorText}\">{$colorNameOnPage}</span> color\n  </h3>\n  <p class=\"example__text\">{$exampleTextOnPage}</p>\n  <div class=\"example-to-use \">\n    <h5 class=\"example-to-use__headline {$classColorText}\">example to use:</h5>\n    <div class=\"example-command\">\n      <code class=\"example-command__text\">\n        const cl = require('node-cl-log'); <br />\n        cl.{$methodName}('Hi, I'm {$colorNameOnPage} text!');\n      </code>\n      <div class=\"result-command-wrap\">\n        <p class=\"arrow {$classColorText}\"></p>\n        <p class=\"result-text {$classColorText}\">\n          Hi, I'm {$colorNameOnPage} color text!'\n        </p>\n      </div>\n    </div>\n  </div>\n</section>\n\n<script>\n  export default {\n    data() {\n      return {}\n    },\n    methods: {}\n  }\n</script>\n\n<style>\n  .container-checkbox {\n    margin: 2rem 2rem;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n  }\n\n  .wrap-checkbox-round {\n    border: 1px solid #ccc;\n    border-radius: 50%;\n    padding: 15px;\n    margin-right: 0.5rem;\n  }\n\n  .round {\n    position: relative;\n  }\n\n  .round label {\n    background-color: #fff;\n    border: 1px solid #ccc;\n    border-radius: 50%;\n    cursor: pointer;\n    height: 28px;\n    left: 0;\n    position: absolute;\n    top: 0;\n    width: 28px;\n  }\n\n  .round input[type=\"checkbox\"] {\n    visibility: hidden;\n  }\n\n  .round input[type=\"checkbox\"]:checked + label:after {\n    opacity: 1;\n  }\n\n  /*\n  Color-methods-panel\n*/\n\n  .color-methods {\n    min-height: 154px;\n    border: 4px solid #e5e5e5;\n    border-radius: 35px 35px 0 0;\n    background-color: white;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: row;\n    flex-direction: row;\n    -webkit-box-pack: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n  }\n\n  .color-methods-panel {\n    width: 84%;\n    margin: 0 auto;\n  }\n\n  .color-text__method-magenta {\n    color: #8b06ba;\n  }\n\n  .color-text__method-green {\n    color: #37cb04;\n  }\n\n  .color-text__method-blue {\n    color: #077fd7;\n  }\n\n  .color-text__method-cyan {\n    color: #04c0cc;\n  }\n\n  .color-text__method-yellow {\n    color: #dadf08;\n  }\n\n  .color-text__method-red {\n    color: #ec0d0d;\n  }\n</style>\n","<!-- for language panel -->\n<!--\n  dataEn : {\n    exampleHeadline: allData.methodsDataEn.exampleHeadline,\n    exampleSpan:  allData.methodsDataEn.exampleSpan,\n    exampleToUseHeadline: allData.methodsDataEn.exampleToUseHeadline,\n    exampleCommandTextUseMethod: allData.methodsDataEn.exampleCommandTextUseMethod,\n    resultTextUseMethod:  allData.methodsDataEn.resultTextUseMethod\n  },\n  dataRu : {\n    exampleHeadline: allData.methodsDataRu.exampleHeadline,\n    exampleSpan:  allData.methodsDataRu.exampleSpan,\n    exampleToUseHeadline: allData.methodsDataRu.exampleToUseHeadline,\n    exampleCommandTextUseMethod: allData.methodsDataRu.exampleCommandTextUseMethod,\n    resultTextUseMethod:  allData.methodsDataRu.resultTextUseMethod\n  },\n  dataBy : {\n    exampleHeadline: allData.methodsDataBy.exampleHeadline,\n    exampleSpan:  allData.methodsDataBy.exampleSpan,\n    exampleToUseHeadline: allData.methodsDataBy.exampleToUseHeadline,\n    exampleCommandTextUseMethod: allData.methodsDataBy.exampleCommandTextUseMethod,\n    resultTextUseMethod:  allData.methodsDataBy.resultTextUseMethod\n  }\n-->\n\n<main>\n  <div class=\"color-methods-panel\">\n    <fieldset class=\"color-methods\">\n      <CheckboxRed />\n      <CheckboxGre />\n      <CheckboxYel />\n      <CheckboxMag />\n      <CheckboxCya />\n      <CheckboxWhi />\n      <CheckboxLog />\n      <!-- <ButtonAllMethods /> -->\n    </fieldset>\n  </div>\n\n  <PrintInfoForMethod />\n  <!-- <PrintAllMethods /> -->\n</main>\n\n<script>\n  // checkbox panel\n  import CheckboxRed from \"./checkboxes/Red.html\"\n  import CheckboxGre from \"./checkboxes/Gre.html\"\n  import CheckboxYel from \"./checkboxes/Yel.html\"\n  import CheckboxMag from \"./checkboxes/Mag.html\"\n  import CheckboxCya from \"./checkboxes/Cya.html\";\n  import CheckboxWhi from \"./checkboxes/Whi.html\";\n  import CheckboxLog from \"./checkboxes/Log.html\"\n  import ButtonAllMethods from './ButtonAllMethods.html'\n  // // documentation\n  import PrintInfoForMethod from \"./PrintInfoForMethod.html\"\n  // import PrintAllMethods from './PrintAllMethods.html'\n\n  export default {\n    components: {\n      CheckboxRed,\n      CheckboxGre,\n      CheckboxYel,\n      CheckboxMag,\n      CheckboxCya,\n      CheckboxWhi,\n      CheckboxLog,\n      ButtonAllMethods,\n      PrintInfoForMethod,\n      // PrintAllMethods\n    },\n    data() {\n      return {}\n    },\n    methods: {}\n  }\n</script>\n\n<style>\n  /*\n  Documentation\n*/\n\n  .documentation {\n    margin: 202px 0 178px;\n  }\n\n  .main__headline {\n    font-size: 64px;\n    line-height: 75px;\n    color: #000000;\n    text-align: center;\n    padding-bottom: 35px;\n  }\n\n  .main__headline_device_min {\n    display: none;\n  }\n\n  /*\n  Install-command\n*/\n\n  .install-command {\n    width: 510px;\n    background-color: rgba(97, 95, 95, 0.87);\n    border-radius: 35px 35px 0 0;\n    margin: auto;\n  }\n\n  .install-command__text {\n    color: #ffffff;\n    text-align: center;\n    vertical-align: middle;\n    padding-top: 10px;\n  }\n\n  .install-command_device_min {\n    display: none;\n  }\n\n  /*\n  Example\n*/\n\n  .example {\n    width: 92%;\n    margin: auto;\n    border: 2px solid #615f5f;\n    border-radius: 35px;\n    background-color: white;\n  }\n\n  .example:not(:first-of-type) {\n    margin-top: 66px;\n  }\n\n  .example__headline {\n    font-size: 48px;\n    line-height: 56px;\n    font-weight: 600;\n    padding: 53px 0 40px 44px;\n  }\n\n  .example__text {\n    font-weight: 500;\n    padding: 40px 80px 40px 36px;\n    min-height: 128px;\n  }\n\n  .example-to-use {\n    margin: 25px 16px 24px 16px;\n  }\n\n  .example-to-use__headline {\n    padding-left: 35px;\n  }\n\n  .example-command {\n    width: 65%;\n    margin: 20px 10px 0 0;\n    background-color: #615f5f;\n    border-radius: 35px;\n    padding: 20px 20px 80px 20px;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-pack: justify;\n    -ms-flex-pack: justify;\n    justify-content: space-between;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n  }\n\n  .example-command__text {\n    display: inline;\n    font-size: 48px;\n    line-height: 70px;\n    font-weight: 500;\n    color: #ffffff;\n    margin-bottom: 45px;\n  }\n\n  .example .result-command-wrap {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    padding-left: 20%;\n  }\n\n  .arrow {\n    margin-bottom: 50px;\n  }\n\n  .arrow:after {\n    content: \"\\21A7\";\n    font-size: 160px;\n  }\n</style>\n","import {\n\tassign,\n\tblankObject,\n\t_differs,\n\t_differsImmutable,\n\tget,\n\ton,\n\tfire\n} from './shared.js';\n\nfunction Store(state, options) {\n\tthis._handlers = {};\n\tthis._dependents = [];\n\n\tthis._computed = blankObject();\n\tthis._sortedComputedProperties = [];\n\n\tthis._state = assign({}, state);\n\tthis._differs = options && options.immutable ? _differsImmutable : _differs;\n}\n\nassign(Store.prototype, {\n\t_add(component, props) {\n\t\tthis._dependents.push({\n\t\t\tcomponent: component,\n\t\t\tprops: props\n\t\t});\n\t},\n\n\t_init(props) {\n\t\tconst state = {};\n\t\tfor (let i = 0; i < props.length; i += 1) {\n\t\t\tconst prop = props[i];\n\t\t\tstate['$' + prop] = this._state[prop];\n\t\t}\n\t\treturn state;\n\t},\n\n\t_remove(component) {\n\t\tlet i = this._dependents.length;\n\t\twhile (i--) {\n\t\t\tif (this._dependents[i].component === component) {\n\t\t\t\tthis._dependents.splice(i, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t},\n\n\t_set(newState, changed) {\n\t\tconst previous = this._state;\n\t\tthis._state = assign(assign({}, previous), newState);\n\n\t\tfor (let i = 0; i < this._sortedComputedProperties.length; i += 1) {\n\t\t\tthis._sortedComputedProperties[i].update(this._state, changed);\n\t\t}\n\n\t\tthis.fire('state', {\n\t\t\tchanged,\n\t\t\tprevious,\n\t\t\tcurrent: this._state\n\t\t});\n\n\t\tthis._dependents\n\t\t\t.filter(dependent => {\n\t\t\t\tconst componentState = {};\n\t\t\t\tlet dirty = false;\n\n\t\t\t\tfor (let j = 0; j < dependent.props.length; j += 1) {\n\t\t\t\t\tconst prop = dependent.props[j];\n\t\t\t\t\tif (prop in changed) {\n\t\t\t\t\t\tcomponentState['$' + prop] = this._state[prop];\n\t\t\t\t\t\tdirty = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dirty) {\n\t\t\t\t\tdependent.component._stage(componentState);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.forEach(dependent => {\n\t\t\t\tdependent.component.set({});\n\t\t\t});\n\n\t\tthis.fire('update', {\n\t\t\tchanged,\n\t\t\tprevious,\n\t\t\tcurrent: this._state\n\t\t});\n\t},\n\n\t_sortComputedProperties() {\n\t\tconst computed = this._computed;\n\t\tconst sorted = this._sortedComputedProperties = [];\n\t\tconst visited = blankObject();\n\t\tlet currentKey;\n\n\t\tfunction visit(key) {\n\t\t\tconst c = computed[key];\n\n\t\t\tif (c) {\n\t\t\t\tc.deps.forEach(dep => {\n\t\t\t\t\tif (dep === currentKey) {\n\t\t\t\t\t\tthrow new Error(`Cyclical dependency detected between ${dep} <-> ${key}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tvisit(dep);\n\t\t\t\t});\n\n\t\t\t\tif (!visited[key]) {\n\t\t\t\t\tvisited[key] = true;\n\t\t\t\t\tsorted.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const key in this._computed) {\n\t\t\tvisit(currentKey = key);\n\t\t}\n\t},\n\n\tcompute(key, deps, fn) {\n\t\tlet value;\n\n\t\tconst c = {\n\t\t\tdeps,\n\t\t\tupdate: (state, changed, dirty) => {\n\t\t\t\tconst values = deps.map(dep => {\n\t\t\t\t\tif (dep in changed) dirty = true;\n\t\t\t\t\treturn state[dep];\n\t\t\t\t});\n\n\t\t\t\tif (dirty) {\n\t\t\t\t\tconst newValue = fn.apply(null, values);\n\t\t\t\t\tif (this._differs(newValue, value)) {\n\t\t\t\t\t\tvalue = newValue;\n\t\t\t\t\t\tchanged[key] = true;\n\t\t\t\t\t\tstate[key] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis._computed[key] = c;\n\t\tthis._sortComputedProperties();\n\n\t\tconst state = assign({}, this._state);\n\t\tconst changed = {};\n\t\tc.update(state, changed, true);\n\t\tthis._set(state, changed);\n\t},\n\n\tfire,\n\n\tget,\n\n\ton,\n\n\tset(newState) {\n\t\tconst oldState = this._state;\n\t\tconst changed = this._changed = {};\n\t\tlet dirty = false;\n\n\t\tfor (const key in newState) {\n\t\t\tif (this._computed[key]) throw new Error(`'${key}' is a read-only computed property`);\n\t\t\tif (this._differs(newState[key], oldState[key])) changed[key] = dirty = true;\n\t\t}\n\t\tif (!dirty) return;\n\n\t\tthis._set(newState, changed);\n\t}\n});\n\nexport { Store };\n","/* { filename: 'main.js' } */\n\n/*\n\n\nнаправил присвоение значения из метода red в свойства:\ncolorNameOnPage\n exampleTextOnPage\n*/\n\nimport App from \"./App.html\"\nimport { Store } from \"svelte/store.js\"\n\nconst store = new Store({\n  colorNameOnPage: \"red\",\n  exampleTextOnPage: \"\", //this.exampleTextEn\n  exampleTextEn: \"\",\n  exampleTextRu: \"\",\n  exampleTextBy: \"\",\n  classColorText: \"color-text__method-red\",\n  classSection: \"red-command\",\n  exampleHeadline: \"\",\n  exampleSpan: \"\",\n  methodName: \"\",\n  hiddenAl: \"true\",\n  hiddenAllMethods: true,\n  hiddenInfoForMethod: false,\n  // change the language version\n  exampleHeadline: \"\",\n  exampleSpan: \"\",\n  exampleToUseHeadlineOnPage: \"Text output in the console in\", // translate on other languages\n  exampleToUseHeadlineEn: \"\",\n  exampleToUseHeadlineRu: \"\",\n  exampleToUseHeadlineBy: \"\",\n  // language versions\n  logoHeadline: \"The main task of color is to serve expressiveness\"\n})\n\nconst app = new App({\n  target: document.querySelector(\"body\"),\n  store\n})\n\nwindow.store = store\n\n// colorNameEn: allData.methodGreEn.colorName,\n// colorNameBy: allData.methodGreBy.colorName,\n// colorNameRu: allData.methodGreRu.colorName,\n// exampleTextEn: allData.methodGreEn.exampleText,\n// exampleTextRu: allData.methodGreRu.exampleText,\n// exampleTextBy: allData.methodGreBy.exampleText,\n// exampleHeadlineEn: allData.methodsDataEn.exampleHeadline,\n// exampleHeadlineRu: allData.methodsDataRu.exampleHeadline,\n// exampleHeadlineBy: allData.methodsDataBy.exampleHeadline,\n// exampleSpanEn:  allData.methodsDataEn.exampleSpan,\n// exampleSpanRu:  allData.methodsDataRu.exampleSpan,\n// exampleSpanBy:  allData.methodsDataBy.exampleSpan,\n// exampleToUseHeadlineEn: allData.methodsDataEn.exampleToUseHeadline,\n// exampleToUseHeadlineRu: allData.methodsDataRu.exampleToUseHeadline,\n// exampleToUseHeadlineBy: allData.methodsDataBy.exampleToUseHeadline,\n// exampleCommandTextUseMethodEn: allData.methodsDataEn.exampleCommandTextUseMethod,\n// exampleCommandTextUseMethodRu: allData.methodsDataRu.exampleCommandTextUseMethod,\n// exampleCommandTextUseMethodBy: allData.methodsDataBy.exampleCommandTextUseMethod,\n// resultTextUseMethodEn:  allData.methodsDataEn.resultTextUseMethod,\n// resultTextUseMethodRu:  allData.methodsDataRu.resultTextUseMethod,\n// resultTextUseMethodBy:  allData.methodsDataBy.resultTextUseMethod,\n"],"names":["store"],"mappings":"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"}